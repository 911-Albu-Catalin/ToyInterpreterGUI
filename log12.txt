Id: 1
Execution Stack:
[(Ref(int) v1 ; (int cnt ; (HeapAllocation(v1, 1) ; (createSemaphore(cnt, ReadHeap(v1)) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt)))))))))]
Symbol table:
{}
Output:
[]
File Table:
{}
Heap Table:
{}

Id: 1
Execution Stack:
[(int cnt ; (HeapAllocation(v1, 1) ; (createSemaphore(cnt, ReadHeap(v1)) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt)))))))), Ref(int) v1]
Symbol table:
{}
Output:
[]
File Table:
{}
Heap Table:
{}

Id: 1
Execution Stack:
[(int cnt ; (HeapAllocation(v1, 1) ; (createSemaphore(cnt, ReadHeap(v1)) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt)))))))), Ref(int) v1]
Symbol table:
{}
Output:
[]
File Table:
{}
Heap Table:
{}

Id: 1
Execution Stack:
[(int cnt ; (HeapAllocation(v1, 1) ; (createSemaphore(cnt, ReadHeap(v1)) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt))))))))]
Symbol table:
{v1=(0, int)}
Output:
[]
File Table:
{}
Heap Table:
{}

Id: 1
Execution Stack:
[(int cnt ; (HeapAllocation(v1, 1) ; (createSemaphore(cnt, ReadHeap(v1)) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt))))))))]
Symbol table:
{v1=(0, int)}
Output:
[]
File Table:
{}
Heap Table:
{}

Id: 1
Execution Stack:
[(HeapAllocation(v1, 1) ; (createSemaphore(cnt, ReadHeap(v1)) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt))))))), int cnt]
Symbol table:
{v1=(0, int)}
Output:
[]
File Table:
{}
Heap Table:
{}

Id: 1
Execution Stack:
[(HeapAllocation(v1, 1) ; (createSemaphore(cnt, ReadHeap(v1)) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt))))))), int cnt]
Symbol table:
{v1=(0, int)}
Output:
[]
File Table:
{}
Heap Table:
{}

Id: 1
Execution Stack:
[(HeapAllocation(v1, 1) ; (createSemaphore(cnt, ReadHeap(v1)) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt)))))))]
Symbol table:
{cnt=0, v1=(0, int)}
Output:
[]
File Table:
{}
Heap Table:
{}

Id: 1
Execution Stack:
[(HeapAllocation(v1, 1) ; (createSemaphore(cnt, ReadHeap(v1)) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt)))))))]
Symbol table:
{cnt=0, v1=(0, int)}
Output:
[]
File Table:
{}
Heap Table:
{}

Id: 1
Execution Stack:
[(createSemaphore(cnt, ReadHeap(v1)) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt)))))), HeapAllocation(v1, 1)]
Symbol table:
{cnt=0, v1=(0, int)}
Output:
[]
File Table:
{}
Heap Table:
{}

Id: 1
Execution Stack:
[(createSemaphore(cnt, ReadHeap(v1)) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt)))))), HeapAllocation(v1, 1)]
Symbol table:
{cnt=0, v1=(0, int)}
Output:
[]
File Table:
{}
Heap Table:
{}

Id: 1
Execution Stack:
[(createSemaphore(cnt, ReadHeap(v1)) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt))))))]
Symbol table:
{cnt=0, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 1
Execution Stack:
[(createSemaphore(cnt, ReadHeap(v1)) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt))))))]
Symbol table:
{cnt=0, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 1
Execution Stack:
[(Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt))))), createSemaphore(cnt, ReadHeap(v1))]
Symbol table:
{cnt=0, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 1
Execution Stack:
[(Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt))))), createSemaphore(cnt, ReadHeap(v1))]
Symbol table:
{cnt=0, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 1
Execution Stack:
[(Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt)))))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 1
Execution Stack:
[(Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))) ; (Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt)))))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 1
Execution Stack:
[(Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt)))), Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt)))))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 1
Execution Stack:
[(Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt)))), Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt)))))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 1
Execution Stack:
[(Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt))))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 2
Execution Stack:
[(acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 1
Execution Stack:
[(Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))) ; (acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt))))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 2
Execution Stack:
[(acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 1
Execution Stack:
[(acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt))), Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt))))))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 2
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 1
Execution Stack:
[(acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt))), Fork((acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt))))))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 2
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt))), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 1
Execution Stack:
[(acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt)))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 2
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt)))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 3
Execution Stack:
[(acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 1
Execution Stack:
[(acquire(cnt) ; (Print(ReadHeap(v1) - 1) ; release(cnt)))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 2
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (Print(ReadHeap(v1)) ; release(cnt)))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 3
Execution Stack:
[(acquire(cnt) ; (HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 1
Execution Stack:
[(Print(ReadHeap(v1) - 1) ; release(cnt)), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 2
Execution Stack:
[(Print(ReadHeap(v1)) ; release(cnt)), HeapWriting(v1, ReadHeap(v1) * 10)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 1
Execution Stack:
[(Print(ReadHeap(v1) - 1) ; release(cnt)), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 2
Execution Stack:
[(Print(ReadHeap(v1)) ; release(cnt)), HeapWriting(v1, ReadHeap(v1) * 10)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=1}

Id: 1
Execution Stack:
[(Print(ReadHeap(v1) - 1) ; release(cnt)), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=10}

Id: 2
Execution Stack:
[(Print(ReadHeap(v1)) ; release(cnt))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=10}

Id: 1
Execution Stack:
[(Print(ReadHeap(v1) - 1) ; release(cnt)), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=10}

Id: 2
Execution Stack:
[(Print(ReadHeap(v1)) ; release(cnt))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=10}

Id: 1
Execution Stack:
[(Print(ReadHeap(v1) - 1) ; release(cnt)), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=10}

Id: 2
Execution Stack:
[release(cnt), Print(ReadHeap(v1))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=10}

Id: 1
Execution Stack:
[(Print(ReadHeap(v1) - 1) ; release(cnt)), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=10}

Id: 2
Execution Stack:
[release(cnt), Print(ReadHeap(v1))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[]
File Table:
{}
Heap Table:
{1=10}

Id: 1
Execution Stack:
[(Print(ReadHeap(v1) - 1) ; release(cnt)), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 2
Execution Stack:
[release(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 1
Execution Stack:
[(Print(ReadHeap(v1) - 1) ; release(cnt)), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 2
Execution Stack:
[release(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 1
Execution Stack:
[(Print(ReadHeap(v1) - 1) ; release(cnt)), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 2
Execution Stack:
[]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 1
Execution Stack:
[(Print(ReadHeap(v1) - 1) ; release(cnt)), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 1
Execution Stack:
[(Print(ReadHeap(v1) - 1) ; release(cnt))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 1
Execution Stack:
[(Print(ReadHeap(v1) - 1) ; release(cnt))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 1
Execution Stack:
[release(cnt), Print(ReadHeap(v1) - 1)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 1
Execution Stack:
[release(cnt), Print(ReadHeap(v1) - 1)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10]
File Table:
{}
Heap Table:
{1=10}

Id: 1
Execution Stack:
[release(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9]
File Table:
{}
Heap Table:
{1=10}

Id: 1
Execution Stack:
[release(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))), acquire(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9]
File Table:
{}
Heap Table:
{1=10}

Id: 1
Execution Stack:
[]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt))))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 10) ; (HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt))))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt))), HeapWriting(v1, ReadHeap(v1) * 10)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt))), HeapWriting(v1, ReadHeap(v1) * 10)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9]
File Table:
{}
Heap Table:
{1=10}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9]
File Table:
{}
Heap Table:
{1=100}

Id: 3
Execution Stack:
[(HeapWriting(v1, ReadHeap(v1) * 2) ; (Print(ReadHeap(v1)) ; release(cnt)))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9]
File Table:
{}
Heap Table:
{1=100}

Id: 3
Execution Stack:
[(Print(ReadHeap(v1)) ; release(cnt)), HeapWriting(v1, ReadHeap(v1) * 2)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9]
File Table:
{}
Heap Table:
{1=100}

Id: 3
Execution Stack:
[(Print(ReadHeap(v1)) ; release(cnt)), HeapWriting(v1, ReadHeap(v1) * 2)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9]
File Table:
{}
Heap Table:
{1=100}

Id: 3
Execution Stack:
[(Print(ReadHeap(v1)) ; release(cnt))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9]
File Table:
{}
Heap Table:
{1=200}

Id: 3
Execution Stack:
[(Print(ReadHeap(v1)) ; release(cnt))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9]
File Table:
{}
Heap Table:
{1=200}

Id: 3
Execution Stack:
[release(cnt), Print(ReadHeap(v1))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9]
File Table:
{}
Heap Table:
{1=200}

Id: 3
Execution Stack:
[release(cnt), Print(ReadHeap(v1))]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9]
File Table:
{}
Heap Table:
{1=200}

Id: 3
Execution Stack:
[release(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9, 200]
File Table:
{}
Heap Table:
{1=200}

Id: 3
Execution Stack:
[release(cnt)]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9, 200]
File Table:
{}
Heap Table:
{1=200}

Id: 3
Execution Stack:
[]
Symbol table:
{cnt=1, v1=(1, int)}
Output:
[10, 9, 200]
File Table:
{}
Heap Table:
{1=200}

